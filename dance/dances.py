class Dances:
    def template(self, multiplier=2):
        names = list()
        times = list()
        keys = list()

        return names, self.slow_down(times, multiplier), keys
    
    def slow_down(self, times, multiplier):
        times2= []
        for x in times:
            z = []
            for y in x:
               z.append(y*multiplier)
            times2.append(z)
        return times2

    def air_guitar(self, multiplier=2):
        names = list()
        times = list()
        keys = list()

        names.append("LAnklePitch")
        times.append([0.433333, 4])
        keys.append([[-0.359129, [3, -0.144444, 0], [3, 1.18889, 0]], [-0.104485, [3, -1.18889, 0], [3, 0, 0]]])
        
        names.append("LAnkleRoll")
        times.append([0.433333, 4])
        keys.append([[-0.0766796, [3, -0.144444, 0], [3, 1.18889, 0]], [0.00114113, [3, -1.18889, 0], [3, 0, 0]]])

        names.append("LElbowRoll")
        times.append([0.166667, 0.6, 0.833333, 1.06667, 1.36667, 1.7, 1.9, 1.96667, 2.3, 2.56667, 2.8, 3.06667, 3.4, 4])
        keys.append([[-1.06916, [3, -0.0555556, 0], [3, 0.144444, 0]], [-1.05688, [3, -0.144444, 0], [3, 0.0777778, 0]], [-1.05688, [3, -0.0777778, 0], [3, 0.0777778, 0]], [-1.04461, [3, -0.0777778, 0], [3, 0.1, 0]], [-1.04461, [3, -0.1, 0], [3, 0.111111, 0]], [-1.04461, [3, -0.111111, 0], [3, 0.0666667, 0]], [-1.04461, [3, -0.0666667, 0], [3, 0.0222222, 0]], [-1.04461, [3, -0.0222222, 0], [3, 0.111111, 0]], [-1.04461, [3, -0.111111, 0], [3, 0.0888889, 0]], [-1.04461, [3, -0.0888889, 0], [3, 0.0777778, 0]], [-1.04461, [3, -0.0777778, 0], [3, 0.0888889, 0]], [-1.04461, [3, -0.0888889, 0], [3, 0.111111, 0]], [-1.04461, [3, -0.111111, 0], [3, 0.2, 0]], [-0.319319, [3, -0.2, 0], [3, 0, 0]]])

        names.append("LElbowYaw")
        times.append([0.166667, 0.6, 0.833333, 1.06667, 1.36667, 1.7, 1.9, 1.96667, 2.3, 2.56667, 2.8, 3.06667, 3.4, 4])
        keys.append([[-1.76722, [3, -0.0555556, 0], [3, 0.144444, 0]], [-1.75341, [3, -0.144444, 0], [3, 0.0777778, 0]], [-1.75495, [3, -0.0777778, 0], [3, 0.0777778, 0]], [-1.75034, [3, -0.0777778, 0], [3, 0.1, 0]], [-1.75034, [3, -0.1, 0], [3, 0.111111, 0]], [-1.75034, [3, -0.111111, 0], [3, 0.0666667, 0]], [-1.75034, [3, -0.0666667, 0], [3, 0.0222222, 0]], [-1.75034, [3, -0.0222222, 0], [3, 0.111111, 0]], [-1.75034, [3, -0.111111, 0], [3, 0.0888889, 0]], [-1.75034, [3, -0.0888889, 0], [3, 0.0777778, 0]], [-1.75034, [3, -0.0777778, 0], [3, 0.0888889, 0]], [-1.75034, [3, -0.0888889, 0], [3, 0.111111, 0]], [-1.75034, [3, -0.111111, 0], [3, 0.2, 0]], [-0.772985, [3, -0.2, 0], [3, 0, 0]]])

        names.append("LHand")
        times.append([0.166667, 4])
        keys.append([[0.922933, [3, -0.0555556, 0], [3, 1.27778, 0]], [0.91041, [3, -1.27778, 0], [3, 0, 0]]])

        names.append("LHipPitch")
        times.append([0.433333, 4])
        keys.append([[-0.291681, [3, -0.144444, 0], [3, 1.18889, 0]], [0.0531118, [3, -1.18889, 0], [3, 0, 0]]])

        names.append("LHipRoll")
        times.append([0.433333, 4])
        keys.append([[0.144004, [3, -0.144444, 0], [3, 1.18889, 0]], [-0.0308314, [3, -1.18889, 0], [3, 0, 0]]])

        names.append("LHipYawPitch")
        times.append([0.433333, 4])
        keys.append([[-0.547681, [3, -0.144444, 0], [3, 1.18889, 0]], [0.0174721, [3, -1.18889, 0], [3, 0, 0]]])

        names.append("LKneePitch")
        times.append([0.433333, 4])
        keys.append([[0.999849, [3, -0.144444, 0], [3, 1.18889, 0]], [0.0782677, [3, -1.18889, 0], [3, 0, 0]]])

        names.append("LShoulderPitch")
        times.append([0.166667, 0.6, 0.833333, 1.06667, 1.36667, 1.7, 1.9, 1.96667, 2.3, 2.56667, 2.8, 3.06667, 3.4, 4])
        keys.append([[0.720938, [3, -0.0555556, 0], [3, 0.144444, 0]], [0.733209, [3, -0.144444, -0.00498558], [3, 0.0777778, 0.00268454]], [0.743948, [3, -0.0777778, -0.00460214], [3, 0.0777778, 0.00460214]], [0.760822, [3, -0.0777778, 0], [3, 0.1, 0]], [0.760822, [3, -0.1, 0], [3, 0.111111, 0]], [0.760822, [3, -0.111111, 0], [3, 0.0666667, 0]], [0.760822, [3, -0.0666667, 0], [3, 0.0222222, 0]], [0.760822, [3, -0.0222222, 0], [3, 0.111111, 0]], [0.760822, [3, -0.111111, 0], [3, 0.0888889, 0]], [0.760822, [3, -0.0888889, 0], [3, 0.0777778, 0]], [0.760822, [3, -0.0777778, 0], [3, 0.0888889, 0]], [0.760822, [3, -0.0888889, 0], [3, 0.111111, 0]], [0.760822, [3, -0.111111, 0], [3, 0.2, 0]], [1.55604, [3, -0.2, 0], [3, 0, 0]]])

        names.append("LShoulderRoll")
        times.append([0.166667, 0.6, 0.833333, 1.06667, 1.36667, 1.7, 1.9, 1.96667, 2.3, 2.56667, 2.8, 3.06667, 3.4, 4])
        keys.append([[0.535324, [3, -0.0555556, 0], [3, 0.144444, 0]], [0.516916, [3, -0.144444, 0], [3, 0.0777778, 0]], [0.516916, [3, -0.0777778, 0], [3, 0.0777778, 0]], [0.501576, [3, -0.0777778, 0], [3, 0.1, 0]], [0.50311, [3, -0.1, 0], [3, 0.111111, 0]], [0.50311, [3, -0.111111, 0], [3, 0.0666667, 0]], [0.50311, [3, -0.0666667, 0], [3, 0.0222222, 0]], [0.50311, [3, -0.0222222, 0], [3, 0.111111, 0]], [0.50311, [3, -0.111111, 0], [3, 0.0888889, 0]], [0.50311, [3, -0.0888889, 0], [3, 0.0777778, 0]], [0.50311, [3, -0.0777778, 0], [3, 0.0888889, 0]], [0.50311, [3, -0.0888889, 0], [3, 0.111111, 0]], [0.50311, [3, -0.111111, 0], [3, 0.2, 0]], [0.363876, [3, -0.2, 0], [3, 0, 0]]])

        names.append("LWristYaw")
        times.append([0.166667, 4])
        keys.append([[-1.01402, [3, -0.0555556, 0], [3, 1.27778, 0]], [-1.02242, [3, -1.27778, 0], [3, 0, 0]]])

        names.append("RAnklePitch")
        times.append([0.433333, 4])
        keys.append([[0.0383229, [3, -0.144444, 0], [3, 1.18889, 0]], [-0.0951351, [3, -1.18889, 0], [3, 0, 0]]])

        names.append("RAnkleRoll")
        times.append([0.433333, 4])
        keys.append([[0.296102, [3, -0.144444, 0], [3, 1.18889, 0]], [0.00451718, [3, -1.18889, 0], [3, 0, 0]]])

        names.append("RElbowRoll")
        times.append([0.166667, 0.6, 0.833333, 1.06667, 1.36667, 1.7, 1.9, 1.96667, 2.3, 2.56667, 2.8, 3.06667, 3.4, 4])
        keys.append([[1.02629, [3, -0.0555556, 0], [3, 0.144444, 0]], [0.523136, [3, -0.144444, 0], [3, 0.0777778, 0]], [1.22264, [3, -0.0777778, 0], [3, 0.0777778, 0]], [0.681137, [3, -0.0777778, 0], [3, 0.1, 0]], [1.11066, [3, -0.1, 0], [3, 0.111111, 0]], [0.656595, [3, -0.111111, 0], [3, 0.0666667, 0]], [1.11066, [3, -0.0666667, 0], [3, 0.0222222, 0]], [0.656595, [3, -0.0222222, 0], [3, 0.111111, 0]], [1.11066, [3, -0.111111, 0], [3, 0.0888889, 0]], [0.656595, [3, -0.0888889, 0], [3, 0.0777778, 0]], [1.11066, [3, -0.0777778, 0], [3, 0.0888889, 0]], [0.656595, [3, -0.0888889, 0], [3, 0.111111, 0]], [1.11066, [3, -0.111111, 0], [3, 0.2, 0]], [0.283869, [3, -0.2, 0], [3, 0, 0]]])

        names.append("RElbowYaw")
        times.append([0.166667, 0.6, 0.833333, 1.06667, 1.36667, 1.7, 1.9, 1.96667, 2.3, 2.56667, 2.8, 3.06667, 3.4, 4])
        keys.append([[0.276078, [3, -0.0555556, 0], [3, 0.144444, 0]], [-0.029188, [3, -0.144444, 0], [3, 0.0777778, 0]], [0.408002, [3, -0.0777778, 0], [3, 0.0777778, 0]], [-0.138102, [3, -0.0777778, 0], [3, 0.1, 0]], [0.391128, [3, -0.1, 0], [3, 0.111111, 0]], [-0.0982179, [3, -0.111111, 0], [3, 0.0666667, 0]], [0.391128, [3, -0.0666667, 0], [3, 0.0222222, 0]], [-0.0982179, [3, -0.0222222, 0], [3, 0.111111, 0]], [0.391128, [3, -0.111111, 0], [3, 0.0888889, 0]], [-0.0982179, [3, -0.0888889, 0], [3, 0.0777778, 0]], [0.391128, [3, -0.0777778, 0], [3, 0.0888889, 0]], [-0.0982179, [3, -0.0888889, 0], [3, 0.111111, 0]], [0.391128, [3, -0.111111, -0.105996], [3, 0.2, 0.190794]], [0.792152, [3, -0.2, 0], [3, 0, 0]]])

        names.append("RHand")
        times.append([0.166667, 0.6, 4])
        keys.append([[0.920751, [3, -0.0555556, 0], [3, 0.144444, 0]], [0.452752, [3, -0.144444, 0], [3, 1.13333, 0]], [0.909692, [3, -1.13333, 0], [3, 0, 0]]])

        names.append("RHipPitch")
        times.append([0.433333, 4])
        keys.append([[-0.125845, [3, -0.144444, 0], [3, 1.18889, 0]], [0.0305574, [3, -1.18889, 0], [3, 0, 0]]])

        names.append("RHipRoll")
        times.append([0.433333, 4])
        keys.append([[-0.309848, [3, -0.144444, 0], [3, 1.18889, 0]], [0.00267122, [3, -1.18889, 0], [3, 0, 0]]])

        names.append("RKneePitch")
        times.append([0.433333, 4])
        keys.append([[0.470523, [3, -0.144444, 0], [3, 1.18889, 0]], [0.0918047, [3, -1.18889, 0], [3, 0, 0]]])

        names.append("RShoulderPitch")
        times.append([0.166667, 0.6, 0.833333, 1.06667, 1.36667, 1.7, 1.9, 1.96667, 2.3, 2.56667, 2.8, 3.06667, 3.4, 4])
        keys.append([[0.889762, [3, -0.0555556, 0], [3, 0.144444, 0]], [0.868286, [3, -0.144444, 0], [3, 0.0777778, 0]], [0.92351, [3, -0.0777778, -0.0112495], [3, 0.0777778, 0.0112495]], [0.935783, [3, -0.0777778, 0], [3, 0.1, 0]], [0.89283, [3, -0.1, 0.00552293], [3, 0.111111, -0.00613659]], [0.886694, [3, -0.111111, 0], [3, 0.0666667, 0]], [0.89283, [3, -0.0666667, 0], [3, 0.0222222, 0]], [0.886694, [3, -0.0222222, 0], [3, 0.111111, 0]], [0.89283, [3, -0.111111, 0], [3, 0.0888889, 0]], [0.886694, [3, -0.0888889, 0], [3, 0.0777778, 0]], [0.89283, [3, -0.0777778, 0], [3, 0.0888889, 0]], [0.886694, [3, -0.0888889, 0], [3, 0.111111, 0]], [0.89283, [3, -0.111111, -0.00613659], [3, 0.2, 0.0110459]], [1.55681, [3, -0.2, 0], [3, 0, 0]]])

        names.append("RShoulderRoll")
        times.append([0.166667, 0.6, 0.833333, 1.06667, 1.36667, 1.7, 1.9, 1.96667, 2.3, 2.56667, 2.8, 3.06667, 3.4, 4])
        keys.append([[-0.181053, [3, -0.0555556, 0], [3, 0.144444, 0]], [-0.101286, [3, -0.144444, -0.0222685], [3, 0.0777778, 0.0119907]], [-0.0782759, [3, -0.0777778, 0], [3, 0.0777778, 0]], [-0.16418, [3, -0.0777778, 0], [3, 0.1, 0]], [-0.075208, [3, -0.1, 0], [3, 0.111111, 0]], [-0.104354, [3, -0.111111, 0], [3, 0.0666667, 0]], [-0.075208, [3, -0.0666667, 0], [3, 0.0222222, 0]], [-0.104354, [3, -0.0222222, 0], [3, 0.111111, 0]], [-0.075208, [3, -0.111111, 0], [3, 0.0888889, 0]], [-0.104354, [3, -0.0888889, 0], [3, 0.0777778, 0]], [-0.075208, [3, -0.0777778, 0], [3, 0.0888889, 0]], [-0.104354, [3, -0.0888889, 0], [3, 0.111111, 0]], [-0.075208, [3, -0.111111, 0], [3, 0.2, 0]], [-0.356235, [3, -0.2, 0], [3, 0, 0]]])

        names.append("RWristYaw")
        times.append([0.166667, 0.6, 4])
        keys.append([[0.96331, [3, -0.0555556, 0], [3, 0.144444, 0]], [0.682588, [3, -0.144444, 0], [3, 1.13333, 0]], [0.964264, [3, -1.13333, 0], [3, 0, 0]]])

        return names, self.slow_down(times, multiplier), keys

    def dab(self, multiplier=2):
        names = list()
        times = list()
        keys = list()

        names.append("HeadPitch")
        times.append([0.2, 0.4, 1.16, 1.36, 1.6, 1.8, 2.4, 2.6, 3])
        keys.append([[-0.161887, [3, -0.0666667, 0], [3, 0.0666667, 0]], [0.386526, [3, -0.0666667, 0], [3, 0.253333, 0]], [0.386526, [3, -0.253333, 0], [3, 0.0666667, 0]], [-0.161887, [3, -0.0666667, 0], [3, 0.08, 0]], [-0.161887, [3, -0.08, 0], [3, 0.0666667, 0]], [0.437512, [3, -0.0666667, 0], [3, 0.2, 0]], [0.437512, [3, -0.2, 0], [3, 0.0666667, 0]], [-0.161887, [3, -0.0666667, 0], [3, 0.133333, 0]], [-0.00400173, [3, -0.133333, 0], [3, 0, 0]]])

        names.append("HeadYaw")
        times.append([0.2, 0.4, 1.16, 1.36, 1.6, 1.8, 2.4, 2.6, 3])
        keys.append([[-0.00729047, [3, -0.0666667, 0], [3, 0.0666667, 0]], [-0.500126, [3, -0.0666667, 0], [3, 0.253333, 0]], [-0.500126, [3, -0.253333, 0], [3, 0.0666667, 0]], [-0.00729047, [3, -0.0666667, 0], [3, 0.08, 0]], [-0.00729047, [3, -0.08, 0], [3, 0.0666667, 0]], [0.406468, [3, -0.0666667, 0], [3, 0.2, 0]], [0.406468, [3, -0.2, 0], [3, 0.0666667, 0]], [-0.00729047, [3, -0.0666667, 0], [3, 0.133333, 0]], [-0.000929716, [3, -0.133333, 0], [3, 0, 0]]])

        names.append("LAnklePitch")
        times.append([0.2, 0.4, 1.16, 1.36, 1.6, 1.8, 2.4, 2.6, 3])
        keys.append([[0.09, [3, -0.0666667, 0], [3, 0.0666667, 0]], [-0.127364, [3, -0.0666667, 0], [3, 0.253333, 0]], [-0.127364, [3, -0.253333, 0], [3, 0.0666667, 0]], [0.09, [3, -0.0666667, 0], [3, 0.08, 0]], [0.09, [3, -0.08, 0], [3, 0.0666667, 0]], [-0.12583, [3, -0.0666667, 0], [3, 0.2, 0]], [-0.12583, [3, -0.2, 0], [3, 0.0666667, 0]], [0.09, [3, -0.0666667, 0], [3, 0.133333, 0]], [-0.35, [3, -0.133333, 0], [3, 0, 0]]])

        names.append("LAnkleRoll")
        times.append([0.2, 0.4, 1.16, 1.36, 1.6, 1.8, 2.4, 2.6, 3])
        keys.append([[-0.136743, [3, -0.0666667, 0], [3, 0.0666667, 0]], [-0.187106, [3, -0.0666667, 0], [3, 0.253333, 0]], [-0.187106, [3, -0.253333, 0], [3, 0.0666667, 0]], [-0.136743, [3, -0.0666667, 0], [3, 0.08, 0]], [-0.136743, [3, -0.08, 0], [3, 0.0666667, 0]], [-0.187106, [3, -0.0666667, 0], [3, 0.2, 0]], [-0.187106, [3, -0.2, 0], [3, 0.0666667, 0]], [-0.136743, [3, -0.0666667, -0.0207896], [3, 0.133333, 0.0415792]], [0, [3, -0.133333, 0], [3, 0, 0]]])

        names.append("LElbowRoll")
        times.append([0.2, 0.4, 1.16, 1.36, 1.6, 1.8, 2.4, 2.6, 3])
        keys.append([[-0.408548, [3, -0.0666667, 0], [3, 0.0666667, 0]], [-0.481634, [3, -0.0666667, 0], [3, 0.253333, 0]], [-0.481634, [3, -0.253333, 0], [3, 0.0666667, 0]], [-0.408548, [3, -0.0666667, 0], [3, 0.08, 0]], [-0.408548, [3, -0.08, 0], [3, 0.0666667, 0]], [-1.15813, [3, -0.0666667, 0], [3, 0.2, 0]], [-1.15813, [3, -0.2, 0], [3, 0.0666667, 0]], [-0.408548, [3, -0.0666667, 0], [3, 0.133333, 0]], [-1.00907, [3, -0.133333, 0], [3, 0, 0]]])

        names.append("LElbowYaw")
        times.append([0.2, 0.4, 1.16, 1.36, 1.6, 1.8, 2.4, 2.6, 3])
        keys.append([[-1.19556, [3, -0.0666667, 0], [3, 0.0666667, 0]], [-1.92368, [3, -0.0666667, 0], [3, 0.253333, 0]], [-1.92368, [3, -0.253333, 0], [3, 0.0666667, 0]], [-1.19556, [3, -0.0666667, 0], [3, 0.08, 0]], [-1.19556, [3, -0.08, 0], [3, 0.0666667, 0]], [-0.139636, [3, -0.0666667, 0], [3, 0.2, 0]], [-0.139636, [3, -0.2, 0], [3, 0.0666667, 0]], [-1.19556, [3, -0.0666667, 0.0931456], [3, 0.133333, -0.186291]], [-1.38185, [3, -0.133333, 0], [3, 0, 0]]])

        names.append("LHand")
        times.append([0.2, 0.4, 1.16, 1.36, 1.6, 1.8, 2.4, 2.6, 3])
        keys.append([[0.296851, [3, -0.0666667, 0], [3, 0.0666667, 0]], [0.292, [3, -0.0666667, 0], [3, 0.253333, 0]], [0.292, [3, -0.253333, 0], [3, 0.0666667, 0]], [0.296851, [3, -0.0666667, 0], [3, 0.08, 0]], [0.296851, [3, -0.08, 0], [3, 0.0666667, 0]], [0.292, [3, -0.0666667, 0], [3, 0.2, 0]], [0.292, [3, -0.2, 0], [3, 0.0666667, 0]], [0.296851, [3, -0.0666667, 0], [3, 0.133333, 0]], [0.259033, [3, -0.133333, 0], [3, 0, 0]]])

        names.append("LHipPitch")
        times.append([0.2, 0.4, 1.16, 1.36, 1.6, 1.8, 2.4, 2.6, 3])
        keys.append([[0.1218, [3, -0.0666667, 0], [3, 0.0666667, 0]], [-0.432547, [3, -0.0666667, 0], [3, 0.253333, 0]], [-0.432547, [3, -0.253333, 0], [3, 0.0666667, 0]], [0.1218, [3, -0.0666667, 0], [3, 0.08, 0]], [0.1218, [3, -0.08, 0], [3, 0.0666667, 0]], [-0.432547, [3, -0.0666667, 0], [3, 0.2, 0]], [-0.432547, [3, -0.2, 0], [3, 0.0666667, 0]], [0.1218, [3, -0.0666667, 0], [3, 0.133333, 0]], [-0.45, [3, -0.133333, 0], [3, 0, 0]]])

        names.append("LHipRoll")
        times.append([0.2, 0.4, 1.16, 1.36, 1.6, 1.8, 2.4, 2.6, 3])
        keys.append([[0.106946, [3, -0.0666667, 0], [3, 0.0666667, 0]], [0.135034, [3, -0.0666667, 0], [3, 0.253333, 0]], [0.135034, [3, -0.253333, 0], [3, 0.0666667, 0]], [0.106946, [3, -0.0666667, 0], [3, 0.08, 0]], [0.106946, [3, -0.08, 0], [3, 0.0666667, 0]], [0.135034, [3, -0.0666667, 0], [3, 0.2, 0]], [0.135034, [3, -0.2, 0], [3, 0.0666667, 0]], [0.106946, [3, -0.0666667, 0.0139072], [3, 0.133333, -0.0278143]], [0.00986949, [3, -0.133333, 0], [3, 0, 0]]])

        names.append("LHipYawPitch")
        times.append([0.2, 0.4, 1.16, 1.36, 1.6, 1.8, 2.4, 2.6, 3])
        keys.append([[-0.172173, [3, -0.0666667, 0], [3, 0.0666667, 0]], [-0.31903, [3, -0.0666667, 0], [3, 0.253333, 0]], [-0.31903, [3, -0.253333, 0], [3, 0.0666667, 0]], [-0.172173, [3, -0.0666667, 0], [3, 0.08, 0]], [-0.172173, [3, -0.08, 0], [3, 0.0666667, 0]], [-0.31903, [3, -0.0666667, 0], [3, 0.2, 0]], [-0.31903, [3, -0.2, 0], [3, 0.0666667, 0]], [-0.172173, [3, -0.0666667, -0.0349749], [3, 0.133333, 0.0699499]], [-0.00425597, [3, -0.133333, 0], [3, 0, 0]]])

        names.append("LKneePitch")
        times.append([0.2, 0.4, 1.16, 1.36, 1.6, 1.8, 2.4, 2.6, 3])
        keys.append([[-0.09, [3, -0.0666667, 0], [3, 0.0666667, 0]], [0.688724, [3, -0.0666667, 0], [3, 0.253333, 0]], [0.688724, [3, -0.253333, 0], [3, 0.0666667, 0]], [-0.09, [3, -0.0666667, 0], [3, 0.08, 0]], [-0.09, [3, -0.08, 0], [3, 0.0666667, 0]], [0.688724, [3, -0.0666667, 0], [3, 0.2, 0]], [0.688724, [3, -0.2, 0], [3, 0.0666667, 0]], [-0.09, [3, -0.0666667, 0], [3, 0.133333, 0]], [0.699999, [3, -0.133333, 0], [3, 0, 0]]])

        names.append("LShoulderPitch")
        times.append([0.2, 0.4, 1.16, 1.36, 1.6, 1.8, 2.4, 2.6, 3])
        keys.append([[1.47659, [3, -0.0666667, 0], [3, 0.0666667, 0]], [1.66435, [3, -0.0666667, 0], [3, 0.253333, 0]], [1.66435, [3, -0.253333, 0], [3, 0.0666667, 0]], [1.47659, [3, -0.0666667, 0], [3, 0.08, 0]], [1.47659, [3, -0.08, 0], [3, 0.0666667, 0]], [-0.021518, [3, -0.0666667, 0], [3, 0.2, 0]], [-0.021518, [3, -0.2, 0], [3, 0.0666667, 0]], [1.47659, [3, -0.0666667, 0], [3, 0.133333, 0]], [1.40226, [3, -0.133333, 0], [3, 0, 0]]])

        names.append("LShoulderRoll")
        times.append([0.2, 0.4, 1.16, 1.36, 1.6, 1.8, 2.4, 2.6, 3])
        keys.append([[0.186494, [3, -0.0666667, 0], [3, 0.0666667, 0]], [1.21949, [3, -0.0666667, 0], [3, 0.253333, 0]], [1.21949, [3, -0.253333, 0], [3, 0.0666667, 0]], [0.186494, [3, -0.0666667, 0], [3, 0.08, 0]], [0.186494, [3, -0.08, 0], [3, 0.0666667, 0]], [-0.268493, [3, -0.0666667, 0], [3, 0.2, 0]], [-0.268493, [3, -0.2, 0], [3, 0.0666667, 0]], [0.186494, [3, -0.0666667, -0.0565461], [3, 0.133333, 0.113092]], [0.299586, [3, -0.133333, 0], [3, 0, 0]]])

        names.append("LWristYaw")
        times.append([0.2, 0.4, 1.16, 1.36, 1.6, 1.8, 2.4, 2.6, 3])
        keys.append([[0.0981755, [3, -0.0666667, 0], [3, 0.0666667, 0]], [-0.067538, [3, -0.0666667, 0], [3, 0.253333, 0]], [-0.067538, [3, -0.253333, 0], [3, 0.0666667, 0]], [0.0981755, [3, -0.0666667, 0], [3, 0.08, 0]], [0.0981755, [3, -0.08, 0], [3, 0.0666667, 0]], [-0.693411, [3, -0.0666667, 0], [3, 0.2, 0]], [-0.693411, [3, -0.2, 0], [3, 0.0666667, 0]], [0.0981755, [3, -0.0666667, 0], [3, 0.133333, 0]], [0.00392109, [3, -0.133333, 0], [3, 0, 0]]])

        names.append("RAnklePitch")
        times.append([0.2, 0.4, 1.16, 1.36, 1.6, 1.8, 2.4, 2.6, 3])
        keys.append([[0.0826511, [3, -0.0666667, 0], [3, 0.0666667, 0]], [-0.414139, [3, -0.0666667, 0], [3, 0.253333, 0]], [-0.414139, [3, -0.253333, 0], [3, 0.0666667, 0]], [0.0826511, [3, -0.0666667, 0], [3, 0.08, 0]], [0.0826511, [3, -0.08, 0], [3, 0.0666667, 0]], [-0.414139, [3, -0.0666667, 0], [3, 0.2, 0]], [-0.414139, [3, -0.2, 0], [3, 0.0666667, 0]], [0.0826511, [3, -0.0666667, 0], [3, 0.133333, 0]], [-0.35, [3, -0.133333, 0], [3, 0, 0]]])

        names.append("RAnkleRoll")
        times.append([0.2, 0.4, 1.16, 1.36, 1.6, 1.8, 2.4, 2.6, 3])
        keys.append([[0.12501, [3, -0.0666667, 0], [3, 0.0666667, 0]], [0.039926, [3, -0.0666667, 0], [3, 0.253333, 0]], [0.039926, [3, -0.253333, 0], [3, 0.0666667, 0]], [0.12501, [3, -0.0666667, 0], [3, 0.08, 0]], [0.12501, [3, -0.08, 0], [3, 0.0666667, 0]], [0.0291878, [3, -0.0666667, 0], [3, 0.2, 0]], [0.0291878, [3, -0.2, 0], [3, 0.0666667, 0]], [0.12501, [3, -0.0666667, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0, 0]]])

        names.append("RElbowRoll")
        times.append([0.2, 0.4, 1.16, 1.36, 1.6, 1.8, 2.4, 2.6, 3])
        keys.append([[0.413516, [3, -0.0666667, 0], [3, 0.0666667, 0]], [1.45734, [3, -0.0666667, 0], [3, 0.253333, 0]], [1.45734, [3, -0.253333, 0], [3, 0.0666667, 0]], [0.413516, [3, -0.0666667, 0], [3, 0.08, 0]], [0.413516, [3, -0.08, 0], [3, 0.0666667, 0]], [0.0890141, [3, -0.0666667, 0], [3, 0.2, 0]], [0.0890141, [3, -0.2, 0], [3, 0.0666667, 0]], [0.413516, [3, -0.0666667, -0.102287], [3, 0.133333, 0.204574]], [1.0096, [3, -0.133333, 0], [3, 0, 0]]])

        names.append("RElbowYaw")
        times.append([0.2, 0.4, 1.16, 1.36, 1.6, 1.8, 2.4, 2.6, 3])
        keys.append([[1.18863, [3, -0.0666667, 0], [3, 0.0666667, 0]], [0.174835, [3, -0.0666667, 0], [3, 0.253333, 0]], [0.174835, [3, -0.253333, 0], [3, 0.0666667, 0]], [1.18863, [3, -0.0666667, 0], [3, 0.08, 0]], [1.18863, [3, -0.08, 0], [3, 0.0666667, 0]], [-0.83914, [3, -0.0666667, 0], [3, 0.2, 0]], [-0.83914, [3, -0.2, 0], [3, 0.0666667, 0]], [1.18863, [3, -0.0666667, -0.0964582], [3, 0.133333, 0.192916]], [1.38155, [3, -0.133333, 0], [3, 0, 0]]])

        names.append("RHand")
        times.append([0.2, 0.4, 1.16, 1.36, 1.6, 1.8, 2.4, 2.6, 3])
        keys.append([[0.3, [3, -0.0666667, 0], [3, 0.0666667, 0]], [0.3116, [3, -0.0666667, 0], [3, 0.253333, 0]], [0.3116, [3, -0.253333, 0], [3, 0.0666667, 0]], [0.3, [3, -0.0666667, 0], [3, 0.08, 0]], [0.3, [3, -0.08, 0], [3, 0.0666667, 0]], [0.3116, [3, -0.0666667, 0], [3, 0.2, 0]], [0.3116, [3, -0.2, 0], [3, 0.0666667, 0]], [0.3, [3, -0.0666667, 0.00577322], [3, 0.133333, -0.0115464]], [0.259641, [3, -0.133333, 0], [3, 0, 0]]])

        names.append("RHipPitch")
        times.append([0.2, 0.4, 1.16, 1.36, 1.6, 1.8, 2.4, 2.6, 3])
        keys.append([[0.121843, [3, -0.0666667, 0], [3, 0.0666667, 0]], [-0.429562, [3, -0.0666667, 0], [3, 0.253333, 0]], [-0.429562, [3, -0.253333, 0], [3, 0.0666667, 0]], [0.121843, [3, -0.0666667, 0], [3, 0.08, 0]], [0.121843, [3, -0.08, 0], [3, 0.0666667, 0]], [-0.429562, [3, -0.0666667, 0], [3, 0.2, 0]], [-0.429562, [3, -0.2, 0], [3, 0.0666667, 0]], [0.121843, [3, -0.0666667, 0], [3, 0.133333, 0]], [-0.45, [3, -0.133333, 0], [3, 0, 0]]])

        names.append("RHipRoll")
        times.append([0.2, 0.4, 1.16, 1.36, 1.6, 1.8, 2.4, 2.6, 3])
        keys.append([[-0.0956137, [3, -0.0666667, 0], [3, 0.0666667, 0]], [-0.0628521, [3, -0.0666667, 0], [3, 0.253333, 0]], [-0.0628521, [3, -0.253333, 0], [3, 0.0666667, 0]], [-0.0956137, [3, -0.0666667, 0], [3, 0.08, 0]], [-0.0956137, [3, -0.08, 0], [3, 0.0666667, 0]], [-0.0628521, [3, -0.0666667, 0], [3, 0.2, 0]], [-0.0628521, [3, -0.2, 0], [3, 0.0666667, 0]], [-0.0956137, [3, -0.0666667, 0], [3, 0.133333, 0]], [-0.00236349, [3, -0.133333, 0], [3, 0, 0]]])

        names.append("RHipYawPitch")
        times.append([0.2, 0.4, 1.16, 1.36, 1.6, 1.8, 2.4, 2.6, 3])
        keys.append([[-0.172173, [3, -0.0666667, 0], [3, 0.0666667, 0]], [-0.31903, [3, -0.0666667, 0], [3, 0.253333, 0]], [-0.31903, [3, -0.253333, 0], [3, 0.0666667, 0]], [-0.172173, [3, -0.0666667, 0], [3, 0.08, 0]], [-0.172173, [3, -0.08, 0], [3, 0.0666667, 0]], [-0.31903, [3, -0.0666667, 0], [3, 0.2, 0]], [-0.31903, [3, -0.2, 0], [3, 0.0666667, 0]], [-0.172173, [3, -0.0666667, -0.0349749], [3, 0.133333, 0.0699499]], [-0.00425597, [3, -0.133333, 0], [3, 0, 0]]])

        names.append("RKneePitch")
        times.append([0.2, 0.4, 1.16, 1.36, 1.6, 1.8, 2.4, 2.6, 3])
        keys.append([[-0.09, [3, -0.0666667, 0], [3, 0.0666667, 0]], [0.960325, [3, -0.0666667, 0], [3, 0.253333, 0]], [0.960325, [3, -0.253333, 0], [3, 0.0666667, 0]], [-0.09, [3, -0.0666667, 0], [3, 0.08, 0]], [-0.09, [3, -0.08, 0], [3, 0.0666667, 0]], [0.954189, [3, -0.0666667, 0], [3, 0.2, 0]], [0.954189, [3, -0.2, 0], [3, 0.0666667, 0]], [-0.09, [3, -0.0666667, 0], [3, 0.133333, 0]], [0.699999, [3, -0.133333, 0], [3, 0, 0]]])

        names.append("RShoulderPitch")
        times.append([0.2, 0.4, 1.16, 1.36, 1.6, 1.8, 2.4, 2.6, 3])
        keys.append([[1.46572, [3, -0.0666667, 0], [3, 0.0666667, 0]], [0.204064, [3, -0.0666667, 0], [3, 0.253333, 0]], [0.204064, [3, -0.253333, 0], [3, 0.0666667, 0]], [1.46572, [3, -0.0666667, 0], [3, 0.08, 0]], [1.46572, [3, -0.08, 0], [3, 0.0666667, 0]], [-0.0827939, [3, -0.0666667, 0], [3, 0.2, 0]], [-0.0827939, [3, -0.2, 0], [3, 0.0666667, 0]], [1.46572, [3, -0.0666667, 0], [3, 0.133333, 0]], [1.40207, [3, -0.133333, 0], [3, 0, 0]]])

        names.append("RShoulderRoll")
        times.append([0.2, 0.4, 1.16, 1.36, 1.6, 1.8, 2.4, 2.6, 3])
        keys.append([[-0.175449, [3, -0.0666667, 0], [3, 0.0666667, 0]], [-0.00771189, [3, -0.0666667, 0], [3, 0.253333, 0]], [-0.00771189, [3, -0.253333, 0], [3, 0.0666667, 0]], [-0.175449, [3, -0.0666667, 0], [3, 0.08, 0]], [-0.175449, [3, -0.08, 0], [3, 0.0666667, 0]], [-1.03396, [3, -0.0666667, 0], [3, 0.2, 0]], [-1.03396, [3, -0.2, 0], [3, 0.0666667, 0]], [-0.175449, [3, -0.0666667, 0], [3, 0.133333, 0]], [-0.295681, [3, -0.133333, 0], [3, 0, 0]]])

        names.append("RWristYaw")
        times.append([0.2, 0.4, 1.16, 1.36, 1.6, 1.8, 2.4, 2.6, 3])
        keys.append([[0.101113, [3, -0.0666667, 0], [3, 0.0666667, 0]], [1.30846, [3, -0.0666667, 0], [3, 0.253333, 0]], [1.30846, [3, -0.253333, 0], [3, 0.0666667, 0]], [0.101113, [3, -0.0666667, 0], [3, 0.08, 0]], [0.101113, [3, -0.08, 0], [3, 0.0666667, 0]], [1.82387, [3, -0.0666667, 0], [3, 0.2, 0]], [1.82387, [3, -0.2, 0], [3, 0.0666667, 0]], [0.101113, [3, -0.0666667, 0.0485374], [3, 0.133333, -0.0970748]], [0.00403843, [3, -0.133333, 0], [3, 0, 0]]])

        return names, self.slow_down(times, multiplier), keys

    
    def dance_move(self, multiplier=2):
        names = list()
        times = list()
        keys = list()

        names.append("HeadPitch")
        times.append([0.333333, 1, 1.6, 2.2, 2.6, 2.86667, 3.13333, 3.4, 3.66667, 5.46667, 6])
        keys.append([[0.00302603, [3, -0.111111, 0], [3, 0.222222, 0]], [0.00302603, [3, -0.222222, 0], [3, 0.2, 0]], [0.340507, [3, -0.2, 0], [3, 0.2, 0]], [-0.417291, [3, -0.2, 0.200954], [3, 0.133333, -0.133969]], [-0.664264, [3, -0.133333, 0], [3, 0.0888889, 0]], [0.0459781, [3, -0.0888889, -0.0674959], [3, 0.0888889, 0.0674959]], [0.113474, [3, -0.0888889, 0], [3, 0.0888889, 0]], [0.0996681, [3, -0.0888889, 0], [3, 0.0888889, 0]], [0.102736, [3, -0.0888889, 0], [3, 0.6, 0]], [-0.00617796, [3, -0.6, 0], [3, 0.177778, 0]], [-0.0046272, [3, -0.177778, 0], [3, 0, 0]]])

        names.append("HeadYaw")
        times.append([0.333333, 1, 1.6, 2.2, 2.6, 2.86667, 3.13333, 3.4, 3.66667, 5.46667, 6])
        keys.append([[-1.10145, [3, -0.111111, 0], [3, 0.222222, 0]], [1.4097, [3, -0.222222, 0], [3, 0.2, 0]], [-0.00924597, [3, -0.2, 0.245439], [3, 0.2, -0.245439]], [-0.254685, [3, -0.2, 0], [3, 0.133333, 0]], [0.506179, [3, -0.133333, -0.17641], [3, 0.0888889, 0.117607]], [0.627364, [3, -0.0888889, 0], [3, 0.0888889, 0]], [-0.22554, [3, -0.0888889, 0], [3, 0.0888889, 0]], [0.645772, [3, -0.0888889, 0], [3, 0.0888889, 0]], [-0.217869, [3, -0.0888889, 0], [3, 0.6, 0]], [0.00456004, [3, -0.6, 0], [3, 0.177778, 0]], [-0.00930693, [3, -0.177778, 0], [3, 0, 0]]])

        names.append("LAnklePitch")
        times.append([0.333333, 1, 1.6, 2.2, 2.6, 3.13333, 5.46667, 6])
        keys.append([[-0.359129, [3, -0.111111, 0], [3, 0.222222, 0]], [-0.762571, [3, -0.222222, 0.0170441], [3, 0.2, -0.0153397]], [-0.777911, [3, -0.2, 0], [3, 0.2, 0]], [-0.580025, [3, -0.2, 0], [3, 0.133333, 0]], [-0.58923, [3, -0.133333, 0.00115064], [3, 0.177778, -0.00153418]], [-0.590764, [3, -0.177778, 0], [3, 0.777778, 0]], [-0.116757, [3, -0.777778, 0], [3, 0.177778, 0]], [-0.350546, [3, -0.177778, 0], [3, 0, 0]]])

        names.append("LAnkleRoll")
        times.append([0.333333, 1, 1.6, 2.2, 2.6, 3.13333, 5.46667, 6])
        keys.append([[-0.282235, [3, -0.111111, 0], [3, 0.222222, 0]], [-0.0598056, [3, -0.222222, -0.00511343], [3, 0.2, 0.00460208]], [-0.0552035, [3, -0.2, 0], [3, 0.2, 0]], [-0.139574, [3, -0.2, 0], [3, 0.133333, 0]], [-0.133438, [3, -0.133333, 0], [3, 0.177778, 0]], [-0.134972, [3, -0.177778, 0], [3, 0.777778, 0]], [0.0138264, [3, -0.777778, 0], [3, 0.177778, 0]], [-0.00709866, [3, -0.177778, 0], [3, 0, 0]]])

        names.append("LElbowRoll")
        times.append([0.333333, 1, 1.6, 2.2, 2.6, 2.86667, 3.13333, 3.4, 3.66667, 4.4, 4.8, 5.46667, 6])
        keys.append([[-0.748551, [3, -0.111111, 0], [3, 0.222222, 0]], [-0.901949, [3, -0.222222, 0.129986], [3, 0.2, -0.116988]], [-1.48947, [3, -0.2, 0], [3, 0.2, 0]], [-1.05688, [3, -0.2, 0], [3, 0.133333, 0]], [-1.56157, [3, -0.133333, 0], [3, 0.0888889, 0]], [-1.08603, [3, -0.0888889, 0], [3, 0.0888889, 0]], [-1.56464, [3, -0.0888889, 0], [3, 0.0888889, 0]], [-0.866668, [3, -0.0888889, 0], [3, 0.0888889, 0]], [-1.56464, [3, -0.0888889, 0], [3, 0.244444, 0]], [-1.02314, [3, -0.244444, -0.272962], [3, 0.133333, 0.148888]], [-0.299088, [3, -0.133333, 0], [3, 0.222222, 0]], [-0.315962, [3, -0.222222, 0.0168739], [3, 0.177778, -0.0134991]], [-1.007, [3, -0.177778, 0], [3, 0, 0]]])

        names.append("LElbowYaw")
        times.append([0.333333, 1, 1.6, 2.2, 2.6, 2.86667, 3.13333, 3.4, 3.66667, 4.4, 4.8, 5.46667, 6])
        keys.append([[0.89428, [3, -0.111111, 0], [3, 0.222222, 0]], [-0.681137, [3, -0.222222, 0], [3, 0.2, 0]], [-0.52467, [3, -0.2, -0.156467], [3, 0.2, 0.156467]], [0.383458, [3, -0.2, 0], [3, 0.133333, 0]], [-0.760906, [3, -0.133333, 0], [3, 0.0888889, 0]], [0.0797261, [3, -0.0888889, 0], [3, 0.0888889, 0]], [-0.83914, [3, -0.0888889, 0], [3, 0.0888889, 0]], [0.329768, [3, -0.0888889, 0], [3, 0.0888889, 0]], [-0.740964, [3, -0.0888889, 0], [3, 0.244444, 0]], [-0.339056, [3, -0.244444, 0], [3, 0.133333, 0]], [-0.932714, [3, -0.133333, 0], [3, 0.222222, 0]], [-0.7471, [3, -0.222222, 0], [3, 0.177778, 0]], [-1.38708, [3, -0.177778, 0], [3, 0, 0]]])

        names.append("LHand")
        times.append([0.333333, 1, 1.6, 2.2, 2.6, 3.13333, 5.46667, 6])
        keys.append([[0.920023, [3, -0.111111, 0], [3, 0.222222, 0]], [0.920023, [3, -0.222222, 0], [3, 0.2, 0]], [0.921478, [3, -0.2, 0], [3, 0.2, 0]], [0.921478, [3, -0.2, 0], [3, 0.133333, 0]], [0.921478, [3, -0.133333, 0], [3, 0.177778, 0]], [0.921478, [3, -0.177778, 0], [3, 0.777778, 0]], [0.920387, [3, -0.777778, 0.00109094], [3, 0.177778, -0.000249359]], [0.255661, [3, -0.177778, 0], [3, 0, 0]]])

        names.append("LHipPitch")
        times.append([0.333333, 1, 1.6, 2.2, 2.6, 3.13333, 5.46667, 6])
        keys.append([[0.232947, [3, -0.111111, 0], [3, 0.222222, 0]], [-0.224186, [3, -0.222222, 0], [3, 0.2, 0]], [-0.21038, [3, -0.2, 0], [3, 0.2, 0]], [-0.34077, [3, -0.2, 0], [3, 0.133333, 0]], [-0.325429, [3, -0.133333, -0.00115061], [3, 0.177778, 0.00153415]], [-0.323895, [3, -0.177778, -0.00153415], [3, 0.777778, 0.00671189]], [0.0764786, [3, -0.777778, 0], [3, 0.177778, 0]], [-0.44423, [3, -0.177778, 0], [3, 0, 0]]])

        names.append("LHipRoll")
        times.append([0.333333, 1, 1.6, 2.2, 2.6, 3.13333, 5.46667, 6])
        keys.append([[0.423192, [3, -0.111111, 0], [3, 0.222222, 0]], [0.31121, [3, -0.222222, 0.0187487], [3, 0.2, -0.0168738]], [0.294336, [3, -0.2, 0.0168738], [3, 0.2, -0.0168738]], [-0.050814, [3, -0.2, 0.0230101], [3, 0.133333, -0.01534]], [-0.0661541, [3, -0.133333, 0], [3, 0.177778, 0]], [-0.0661541, [3, -0.177778, 0], [3, 0.777778, 0]], [-0.0492801, [3, -0.777778, -0.016874], [3, 0.177778, 0.00385692]], [0, [3, -0.177778, 0], [3, 0, 0]]])

        names.append("LHipYawPitch")
        times.append([0.333333, 1, 1.6, 2.2, 2.6, 3.13333, 3.66667, 5.46667, 6])
        keys.append([[-0.113559, [3, -0.111111, 0], [3, 0.222222, 0]], [-0.236279, [3, -0.222222, 0], [3, 0.2, 0]], [-0.230144, [3, -0.2, 0], [3, 0.2, 0]], [-0.32065, [3, -0.2, 0], [3, 0.133333, 0]], [-0.311445, [3, -0.133333, 0], [3, 0.177778, 0]], [-0.311445, [3, -0.177778, 0], [3, 0.177778, 0]], [-0.302242, [3, -0.177778, -0.00920312], [3, 0.6, 0.0310605]], [0.0275685, [3, -0.6, 0], [3, 0.177778, 0]], [-0.0028562, [3, -0.177778, 0], [3, 0, 0]]])

        names.append("LKneePitch")
        times.append([0.333333, 1, 1.6, 2.2, 2.6, 3.13333, 5.46667, 6])
        keys.append([[0.14541, [3, -0.111111, 0], [3, 0.222222, 0]], [1.11643, [3, -0.222222, -0.0187487], [3, 0.2, 0.0168739]], [1.13331, [3, -0.2, 0], [3, 0.2, 0]], [1.01212, [3, -0.2, 0], [3, 0.133333, 0]], [1.03513, [3, -0.133333, 0], [3, 0.177778, 0]], [1.02899, [3, -0.177778, 0.00613659], [3, 0.777778, -0.0268476]], [0.0871181, [3, -0.777778, 0], [3, 0.177778, 0]], [0.699999, [3, -0.177778, 0], [3, 0, 0]]])

        names.append("LShoulderPitch")
        times.append([0.333333, 1, 1.6, 2.2, 2.6, 2.86667, 3.13333, 3.4, 3.66667, 4.4, 4.8, 5.46667, 6])
        keys.append([[0.653443, [3, -0.111111, 0], [3, 0.222222, 0]], [-0.934249, [3, -0.222222, 0], [3, 0.2, 0]], [0.489305, [3, -0.2, -0.0997089], [3, 0.2, 0.0997089]], [0.589014, [3, -0.2, 0], [3, 0.133333, 0]], [0.259204, [3, -0.133333, 0], [3, 0.0888889, 0]], [0.714801, [3, -0.0888889, 0], [3, 0.0888889, 0]], [0.245399, [3, -0.0888889, 0], [3, 0.0888889, 0]], [0.656511, [3, -0.0888889, 0], [3, 0.0888889, 0]], [0.274544, [3, -0.0888889, 0], [3, 0.244444, 0]], [0.720938, [3, -0.244444, 0], [3, 0.133333, 0]], [0.437147, [3, -0.133333, 0], [3, 0.222222, 0]], [1.56004, [3, -0.222222, 0], [3, 0.177778, 0]], [1.39144, [3, -0.177778, 0], [3, 0, 0]]])

        names.append("LShoulderRoll")
        times.append([0.333333, 1, 1.6, 2.2, 2.6, 2.86667, 3.13333, 3.4, 3.66667, 4.4, 4.8, 5.46667, 6])
        keys.append([[1.32687, [3, -0.111111, 0], [3, 0.222222, 0]], [1.39743, [3, -0.222222, 0], [3, 0.2, 0]], [0.010696, [3, -0.2, 0], [3, 0.2, 0]], [0.013764, [3, -0.2, 0], [3, 0.133333, 0]], [0, [3, -0.133333, 0], [3, 0.0888889, 0]], [0, [3, -0.0888889, 0], [3, 0.0888889, 0]], [0.013764, [3, -0.0888889, 0], [3, 0.0888889, 0]], [0, [3, -0.0888889, 0], [3, 0.0888889, 0]], [0, [3, -0.0888889, 0], [3, 0.244444, 0]], [0.061318, [3, -0.244444, -0.0613179], [3, 0.133333, 0.0334462]], [1.13052, [3, -0.133333, 0], [3, 0.222222, 0]], [0.302157, [3, -0.222222, 0.00105811], [3, 0.177778, -0.000846486]], [0.30131, [3, -0.177778, 0], [3, 0, 0]]])

        names.append("LWristYaw")
        times.append([0.333333, 1, 1.6, 2.2, 2.6, 3.13333, 5.46667, 6])
        keys.append([[-1.02475, [3, -0.111111, 0], [3, 0.222222, 0]], [-1.02475, [3, -0.222222, 0], [3, 0.2, 0]], [-1.02015, [3, -0.2, 0], [3, 0.2, 0]], [-1.02629, [3, -0.2, 0], [3, 0.133333, 0]], [-1.02015, [3, -0.133333, 0], [3, 0.177778, 0]], [-1.02629, [3, -0.177778, 0], [3, 0.777778, 0]], [1.04461, [3, -0.777778, 0], [3, 0.177778, 0]], [-0.00130817, [3, -0.177778, 0], [3, 0, 0]]])

        names.append("RAnklePitch")
        times.append([0.333333, 1, 1.6, 2.2, 2.6, 3.13333, 3.66667, 5.46667, 6])
        keys.append([[-0.102805, [3, -0.111111, 0], [3, 0.222222, 0]], [-0.210185, [3, -0.222222, 0.0119322], [3, 0.2, -0.010739]], [-0.220924, [3, -0.2, 0.010739], [3, 0.2, -0.010739]], [-0.405004, [3, -0.2, 0.0115035], [3, 0.133333, -0.00766897]], [-0.412673, [3, -0.133333, 0], [3, 0.177778, 0]], [-0.412673, [3, -0.177778, 0], [3, 0.177778, 0]], [-0.421878, [3, -0.177778, 0], [3, 0.6, 0]], [-0.102805, [3, -0.6, 0], [3, 0.177778, 0]], [-0.34791, [3, -0.177778, 0], [3, 0, 0]]])

        names.append("RAnkleRoll")
        times.append([0.333333, 1, 1.6, 2.2, 2.6, 3.13333, 3.66667, 5.46667, 6])
        keys.append([[-0.00456227, [3, -0.111111, 0], [3, 0.222222, 0]], [-0.105806, [3, -0.222222, 0.0017044], [3, 0.2, -0.00153396]], [-0.10734, [3, -0.2, 0], [3, 0.2, 0]], [-0.0229703, [3, -0.2, 0], [3, 0.133333, 0]], [-0.0245042, [3, -0.133333, 0.000438277], [3, 0.177778, -0.00058437]], [-0.0260382, [3, -0.177778, 0.000511323], [3, 0.177778, -0.000511323]], [-0.0275722, [3, -0.177778, 0], [3, 0.6, 0]], [-0.00456227, [3, -0.6, -0.00754438], [3, 0.177778, 0.00223537]], [0.00176708, [3, -0.177778, 0], [3, 0, 0]]])

        names.append("RElbowRoll")
        times.append([0.333333, 1, 1.6, 2.2, 2.6, 2.86667, 3.13333, 3.4, 3.66667, 4.4, 4.8, 5.46667, 6])
        keys.append([[0.727158, [3, -0.111111, 0], [3, 0.222222, 0]], [1.10452, [3, -0.222222, 0], [3, 0.2, 0]], [0.176453, [3, -0.2, 0.00613674], [3, 0.2, -0.00613674]], [0.170316, [3, -0.2, 0], [3, 0.133333, 0]], [0.174919, [3, -0.133333, 0], [3, 0.0888889, 0]], [0.174919, [3, -0.0888889, 0], [3, 0.0888889, 0]], [0.173384, [3, -0.0888889, 0.000767101], [3, 0.0888889, -0.000767101]], [0.170316, [3, -0.0888889, 0], [3, 0.0888889, 0]], [0.173384, [3, -0.0888889, -0.00306793], [3, 0.244444, 0.0084368]], [0.280764, [3, -0.244444, -0.10738], [3, 0.133333, 0.058571]], [1.34843, [3, -0.133333, 0], [3, 0.222222, 0]], [0.273093, [3, -0.222222, 0], [3, 0.177778, 0]], [1.00676, [3, -0.177778, 0], [3, 0, 0]]])

        names.append("RElbowYaw")
        times.append([0.333333, 1, 1.6, 2.2, 2.6, 2.86667, 3.13333, 3.4, 3.66667, 4.4, 4.8, 5.46667, 6])
        keys.append([[0.946436, [3, -0.111111, 0], [3, 0.222222, 0]], [-0.515466, [3, -0.222222, 0], [3, 0.2, 0]], [0.728609, [3, -0.2, 0], [3, 0.2, 0]], [0.722472, [3, -0.2, 0], [3, 0.133333, 0]], [0.730143, [3, -0.133333, -0.00184063], [3, 0.0888889, 0.00122709]], [0.731675, [3, -0.0888889, 0], [3, 0.0888889, 0]], [0.730143, [3, -0.0888889, 0.00153245], [3, 0.0888889, -0.00153245]], [0.71787, [3, -0.0888889, 0], [3, 0.0888889, 0]], [0.722472, [3, -0.0888889, 0], [3, 0.244444, 0]], [-1.22878, [3, -0.244444, 0], [3, 0.133333, 0]], [-0.0537319, [3, -0.133333, -0.249658], [3, 0.222222, 0.416097]], [0.768491, [3, -0.222222, -0.266814], [3, 0.177778, 0.213451]], [1.38706, [3, -0.177778, 0], [3, 0, 0]]])

        names.append("RHand")
        times.append([0.333333, 1, 1.6, 2.2, 2.6, 3.13333, 5.46667, 6])
        keys.append([[0.920387, [3, -0.111111, 0], [3, 0.222222, 0]], [0.920387, [3, -0.222222, 0], [3, 0.2, 0]], [0.922933, [3, -0.2, 0], [3, 0.2, 0]], [0.922933, [3, -0.2, 0], [3, 0.133333, 0]], [0.925478, [3, -0.133333, 0], [3, 0.177778, 0]], [0.922933, [3, -0.177778, 0], [3, 0.777778, 0]], [0.971296, [3, -0.777778, 0], [3, 0.177778, 0]], [0.255665, [3, -0.177778, 0], [3, 0, 0]]])

        names.append("RHipPitch")
        times.append([0.333333, 1, 1.6, 2.2, 2.6, 3.13333, 3.66667, 5.46667, 6])
        keys.append([[0.041361, [3, -0.111111, 0], [3, 0.222222, 0]], [-0.24243, [3, -0.222222, 0], [3, 0.2, 0]], [-0.237827, [3, -0.2, 0], [3, 0.2, 0]], [-0.856028, [3, -0.2, 0], [3, 0.133333, 0]], [-0.848359, [3, -0.133333, 0], [3, 0.177778, 0]], [-0.852962, [3, -0.177778, 0], [3, 0.177778, 0]], [-0.851427, [3, -0.177778, -0.00153418], [3, 0.6, 0.00517786]], [0.041361, [3, -0.6, 0], [3, 0.177778, 0]], [-0.45, [3, -0.177778, 0], [3, 0, 0]]])

        names.append("RHipRoll")
        times.append([0.333333, 1, 1.6, 2.2, 2.6, 3.13333, 3.66667, 5.46667, 6])
        keys.append([[0.0153604, [3, -0.111111, 0], [3, 0.222222, 0]], [0.210178, [3, -0.222222, -0.00511381], [3, 0.2, 0.00460242]], [0.21478, [3, -0.2, 0], [3, 0.2, 0]], [-0.0889516, [3, -0.2, 0], [3, 0.133333, 0]], [-0.0843497, [3, -0.133333, 0], [3, 0.177778, 0]], [-0.0843497, [3, -0.177778, 0], [3, 0.177778, 0]], [-0.0797476, [3, -0.177778, -0.00460208], [3, 0.6, 0.015532]], [0.0153604, [3, -0.6, 0], [3, 0.177778, 0]], [0.00205951, [3, -0.177778, 0], [3, 0, 0]]])

        names.append("RKneePitch")
        times.append([0.333333, 1, 1.6, 2.2, 2.6, 3.13333, 3.66667, 5.46667, 6])
        keys.append([[0.105432, [3, -0.111111, 0], [3, 0.222222, 0]], [0.619321, [3, -0.222222, -0.0238625], [3, 0.2, 0.0214763]], [0.640798, [3, -0.2, -0.0214763], [3, 0.2, 0.0214763]], [1.26974, [3, -0.2, -0.0322144], [3, 0.133333, 0.0214763]], [1.29121, [3, -0.133333, 0], [3, 0.177778, 0]], [1.28968, [3, -0.177778, 0], [3, 0.177778, 0]], [1.31576, [3, -0.177778, 0], [3, 0.6, 0]], [0.105432, [3, -0.6, 0], [3, 0.177778, 0]], [0.699999, [3, -0.177778, 0], [3, 0, 0]]])

        names.append("RShoulderPitch")
        times.append([0.333333, 1, 1.6, 2.2, 2.6, 2.86667, 3.13333, 3.4, 3.66667, 4.4, 4.8, 5.46667, 6])
        keys.append([[-0.970981, [3, -0.111111, 0], [3, 0.222222, 0]], [0.782382, [3, -0.222222, 0], [3, 0.2, 0]], [-0.877407, [3, -0.2, 0], [3, 0.2, 0]], [-0.863599, [3, -0.2, -0.0119653], [3, 0.133333, 0.00797686]], [-0.81758, [3, -0.133333, -0.00460244], [3, 0.0888889, 0.00306829]], [-0.814512, [3, -0.0888889, 0], [3, 0.0888889, 0]], [-0.819114, [3, -0.0888889, 0], [3, 0.0888889, 0]], [-0.811444, [3, -0.0888889, 0], [3, 0.0888889, 0]], [-0.81758, [3, -0.0888889, 0], [3, 0.244444, 0]], [-0.085862, [3, -0.244444, -0.264028], [3, 0.133333, 0.144016]], [0.406552, [3, -0.133333, -0.205364], [3, 0.222222, 0.342274]], [1.55705, [3, -0.222222, 0], [3, 0.177778, 0]], [1.39697, [3, -0.177778, 0], [3, 0, 0]]])

        names.append("RShoulderRoll")
        times.append([0.333333, 1, 1.6, 2.2, 2.6, 2.86667, 3.13333, 3.4, 3.66667, 4.4, 4.8, 5.46667, 6])
        keys.append([[-1.40519, [3, -0.111111, 0], [3, 0.222222, 0]], [-1.30701, [3, -0.222222, -0.0707792], [3, 0.2, 0.0637013]], [-1.00174, [3, -0.2, 0], [3, 0.2, 0]], [-1.01248, [3, -0.2, 0.00490891], [3, 0.133333, -0.00327261]], [-1.02629, [3, -0.133333, 0], [3, 0.0888889, 0]], [-1.02015, [3, -0.0888889, 0], [3, 0.0888889, 0]], [-1.03856, [3, -0.0888889, 0.00511322], [3, 0.0888889, -0.00511322]], [-1.05083, [3, -0.0888889, 0.00357938], [3, 0.0888889, -0.00357938]], [-1.06004, [3, -0.0888889, 0.00920488], [3, 0.244444, -0.0253134]], [-1.25179, [3, -0.244444, 0], [3, 0.133333, 0]], [-0.00617796, [3, -0.133333, 0], [3, 0.222222, 0]], [-0.296104, [3, -0.222222, 0.00650789], [3, 0.177778, -0.00520631]], [-0.30131, [3, -0.177778, 0], [3, 0, 0]]])

        names.append("RWristYaw")
        times.append([0.333333, 1, 1.6, 2.2, 2.6, 3.13333, 5.46667, 6])
        keys.append([[0.977116, [3, -0.111111, 0], [3, 0.222222, 0]], [0.974047, [3, -0.222222, 0.00215287], [3, 0.2, -0.00193759]], [0.964844, [3, -0.2, 0], [3, 0.2, 0]], [0.966378, [3, -0.2, -0.00153411], [3, 0.133333, 0.00102274]], [0.98632, [3, -0.133333, 0], [3, 0.177778, 0]], [0.966378, [3, -0.177778, 0], [3, 0.777778, 0]], [1.49254, [3, -0.777778, 0], [3, 0.177778, 0]], [0.000547559, [3, -0.177778, 0], [3, 0, 0]]])

        return names, self.slow_down(times, multiplier), keys

    def sprinkler(self, multiplier=2):
            names = list()
            times = list()
            keys = list()

            names.append("HeadPitch")
            times.append([0.225, 3.05, 3.325, 4])
            keys.append([[-0.233874, [3, -0.075, 0], [3, 0.941667, 0]], [-0.173384, [3, -0.941667, 0], [3, 0.0916667, 0]], [-0.173384, [3, -0.0916667, 0], [3, 0.225, 0]], [-0.00540675, [3, -0.225, 0], [3, 0, 0]]])

            names.append("HeadYaw")
            times.append([0.225, 3.05, 3.325, 4])
            keys.append([[0.912807, [3, -0.075, 0], [3, 0.941667, 0]], [0.21932, [3, -0.941667, 0], [3, 0.0916667, 0]], [0.21932, [3, -0.0916667, 0], [3, 0.225, 0]], [-0.00306787, [3, -0.225, 0], [3, 0, 0]]])

            names.append("LAnklePitch")
            times.append([0.125, 3.05, 3.325, 4])
            keys.append([[-0.214803, [3, -0.0416667, 0], [3, 0.975, 0]], [-0.406552, [3, -0.975, 0], [3, 0.0916667, 0]], [-0.406552, [3, -0.0916667, 0], [3, 0.225, 0]], [-0.35, [3, -0.225, 0], [3, 0, 0]]])

            names.append("LAnkleRoll")
            times.append([0.125, 3.05, 3.325, 4])
            keys.append([[-0.14262, [3, -0.0416667, 0], [3, 0.975, 0]], [-0.11961, [3, -0.975, 0], [3, 0.0916667, 0]], [-0.11961, [3, -0.0916667, 0], [3, 0.225, 0]], [0, [3, -0.225, 0], [3, 0, 0]]])

            names.append("LElbowRoll")
            times.append([0.175, 0.55, 3.05, 3.325, 4])
            keys.append([[-0.0349066, [3, -0.0583333, 0], [3, 0.125, 0]], [-0.0459781, [3, -0.125, 0.0110715], [3, 0.833333, -0.07381]], [-0.358915, [3, -0.833333, 0], [3, 0.0916667, 0]], [-0.358915, [3, -0.0916667, 0], [3, 0.225, 0]], [-1.00618, [3, -0.225, 0], [3, 0, 0]]])

            names.append("LElbowYaw")
            times.append([0.175, 0.55, 3.05, 3.325, 4])
            keys.append([[-1.48956, [3, -0.0583333, 0], [3, 0.125, 0]], [-1.48035, [3, -0.125, -0.00920482], [3, 0.833333, 0.0613654]], [-1.26099, [3, -0.833333, 0], [3, 0.0916667, 0]], [-1.26099, [3, -0.0916667, 0], [3, 0.225, 0]], [-1.3896, [3, -0.225, 0], [3, 0, 0]]])

            names.append("LHand")
            times.append([0.175, 0.55, 3.05, 3.325, 4])
            keys.append([[0.9616, [3, -0.0583333, 0], [3, 0.125, 0]], [0.9592, [3, -0.125, 0], [3, 0.833333, 0]], [0.9616, [3, -0.833333, 0], [3, 0.0916667, 0]], [0.9616, [3, -0.0916667, 0], [3, 0.225, 0]], [0.256818, [3, -0.225, 0], [3, 0, 0]]])

            names.append("LHipPitch")
            times.append([0.125, 3.05, 3.325, 4])
            keys.append([[-0.144154, [3, -0.0416667, 0], [3, 0.975, 0]], [-0.268407, [3, -0.975, 0], [3, 0.0916667, 0]], [-0.268407, [3, -0.0916667, 0], [3, 0.225, 0]], [-0.45, [3, -0.225, 0], [3, 0, 0]]])

            names.append("LHipRoll")
            times.append([0.125, 3.05, 3.325, 4])
            keys.append([[0.233211, [3, -0.0416667, 0], [3, 0.975, 0]], [0.173384, [3, -0.975, 0], [3, 0.0916667, 0]], [0.173384, [3, -0.0916667, 0], [3, 0.225, 0]], [0, [3, -0.225, 0], [3, 0, 0]]])

            names.append("LHipYawPitch")
            times.append([0.125, 3.05, 3.325, 4])
            keys.append([[-0.288349, [3, -0.0416667, 0], [3, 0.975, 0]], [-0.28068, [3, -0.975, 0], [3, 0.0916667, 0]], [-0.28068, [3, -0.0916667, 0], [3, 0.225, 0]], [-0.00744648, [3, -0.225, 0], [3, 0, 0]]])

            names.append("LKneePitch")
            times.append([0.125, 3.05, 3.325, 4])
            keys.append([[0.539926, [3, -0.0416667, 0], [3, 0.975, 0]], [0.820649, [3, -0.975, 0], [3, 0.0916667, 0]], [0.820649, [3, -0.0916667, 0], [3, 0.225, 0]], [0.699999, [3, -0.225, 0], [3, 0, 0]]])

            names.append("LShoulderPitch")
            times.append([0.175, 0.225, 0.55, 3.05, 3.325, 4])
            keys.append([[-0.420357, [3, -0.0583333, 0], [3, 0.0166667, 0]], [-0.560251, [3, -0.0166667, 0], [3, 0.108333, 0]], [-0.417134, [3, -0.108333, -0.0177769], [3, 0.833333, 0.136745]], [-0.0966839, [3, -0.833333, 0], [3, 0.0916667, 0]], [-0.0966839, [3, -0.0916667, 0], [3, 0.225, 0]], [1.40142, [3, -0.225, 0], [3, 0, 0]]])

            names.append("LShoulderRoll")
            times.append([0.175, 0.55, 0.825, 1.05, 1.3, 1.55, 1.775, 2.05, 2.3, 2.525, 2.8, 3.05, 3.325, 4])
            keys.append([[0.819114, [3, -0.0583333, 0], [3, 0.125, 0]], [0.461692, [3, -0.125, 0], [3, 0.0916667, 0]], [0.610865, [3, -0.0916667, 0], [3, 0.075, 0]], [0.223402, [3, -0.075, 0], [3, 0.0833333, 0]], [0.460767, [3, -0.0833333, 0], [3, 0.0833333, 0]], [0.0436332, [3, -0.0833333, 0], [3, 0.075, 0]], [0.312414, [3, -0.075, 0], [3, 0.0916667, 0]], [-0.0610865, [3, -0.0916667, 0], [3, 0.0833333, 0]], [0.207694, [3, -0.0833333, 0], [3, 0.075, 0]], [-0.195477, [3, -0.075, 0], [3, 0.0916667, 0]], [0.0593412, [3, -0.0916667, 0], [3, 0.0833333, 0]], [-0.159578, [3, -0.0833333, 0], [3, 0.0916667, 0]], [-0.159578, [3, -0.0916667, 0], [3, 0.225, 0]], [0.292669, [3, -0.225, 0], [3, 0, 0]]])

            names.append("LWristYaw")
            times.append([0.175, 0.55, 0.825, 1.05, 3.05, 3.325, 4])
            keys.append([[0.312894, [3, -0.0583333, 0], [3, 0.125, 0]], [0.131882, [3, -0.125, 0.0474176], [3, 0.0916667, -0.0347729]], [0.0663225, [3, -0.0916667, 0], [3, 0.075, 0]], [0.0663225, [3, -0.075, 0], [3, 0.666667, 0]], [-0.29457, [3, -0.666667, 0], [3, 0.0916667, 0]], [-0.29457, [3, -0.0916667, 0], [3, 0.225, 0]], [0.00636638, [3, -0.225, 0], [3, 0, 0]]])

            names.append("RAnklePitch")
            times.append([0.125, 3.05, 3.325, 4])
            keys.append([[-0.0199001, [3, -0.0416667, 0], [3, 0.975, 0]], [-0.263807, [3, -0.975, 0], [3, 0.0916667, 0]], [-0.263807, [3, -0.0916667, 0], [3, 0.225, 0]], [-0.35, [3, -0.225, 0], [3, 0, 0]]])

            names.append("RAnkleRoll")
            times.append([0.125, 3.05, 3.325, 4])
            keys.append([[0.116626, [3, -0.0416667, 0], [3, 0.975, 0]], [0.0828778, [3, -0.975, 0], [3, 0.0916667, 0]], [0.0828778, [3, -0.0916667, 0], [3, 0.225, 0]], [0.00884578, [3, -0.225, 0], [3, 0, 0]]])

            names.append("RElbowRoll")
            times.append([0.2, 0.525, 0.8, 1.05, 1.325, 1.55, 1.8, 2.1, 2.3, 2.55, 2.775, 3.05, 3.325, 4])
            keys.append([[1.54462, [3, -0.0666667, 0], [3, 0.108333, 0]], [1.53864, [3, -0.108333, 0], [3, 0.0916667, 0]], [1.54462, [3, -0.0916667, 0], [3, 0.0833333, 0]], [1.53864, [3, -0.0833333, 0], [3, 0.0916667, 0]], [1.54462, [3, -0.0916667, 0], [3, 0.075, 0]], [1.53864, [3, -0.075, 0], [3, 0.0833333, 0]], [1.54462, [3, -0.0833333, 0], [3, 0.1, 0]], [1.53864, [3, -0.1, 0], [3, 0.0666667, 0]], [1.54462, [3, -0.0666667, 0], [3, 0.0833333, 0]], [1.53864, [3, -0.0833333, 0], [3, 0.075, 0]], [1.54462, [3, -0.075, 0], [3, 0.0916667, 0]], [1.53558, [3, -0.0916667, 0], [3, 0.0916667, 0]], [1.53558, [3, -0.0916667, 0], [3, 0.225, 0]], [1.00611, [3, -0.225, 0], [3, 0, 0]]])

            names.append("RElbowYaw")
            times.append([0.2, 0.525, 0.8, 1.05, 1.325, 1.55, 1.8, 2.1, 2.3, 2.55, 2.775, 3.05, 3.325, 4])
            keys.append([[0.966378, [3, -0.0666667, 0], [3, 0.108333, 0]], [1.38823, [3, -0.108333, 0], [3, 0.0916667, 0]], [0.966378, [3, -0.0916667, 0], [3, 0.0833333, 0]], [1.38823, [3, -0.0833333, 0], [3, 0.0916667, 0]], [0.966378, [3, -0.0916667, 0], [3, 0.075, 0]], [1.38823, [3, -0.075, 0], [3, 0.0833333, 0]], [0.966378, [3, -0.0833333, 0], [3, 0.1, 0]], [1.38823, [3, -0.1, 0], [3, 0.0666667, 0]], [0.966378, [3, -0.0666667, 0], [3, 0.0833333, 0]], [1.38823, [3, -0.0833333, 0], [3, 0.075, 0]], [0.966378, [3, -0.075, 0], [3, 0.0916667, 0]], [1.36982, [3, -0.0916667, 0], [3, 0.0916667, 0]], [1.36982, [3, -0.0916667, 0], [3, 0.225, 0]], [1.38866, [3, -0.225, 0], [3, 0, 0]]])

            names.append("RHand")
            times.append([0.2, 0.525, 0.8, 1.05, 1.325, 1.55, 1.8, 2.1, 2.3, 2.55, 2.775, 3.05, 3.325, 4])
            keys.append([[0.7708, [3, -0.0666667, 0], [3, 0.108333, 0]], [0.7696, [3, -0.108333, 0], [3, 0.0916667, 0]], [0.7708, [3, -0.0916667, 0], [3, 0.0833333, 0]], [0.7696, [3, -0.0833333, 0], [3, 0.0916667, 0]], [0.7708, [3, -0.0916667, 0], [3, 0.075, 0]], [0.7696, [3, -0.075, 0], [3, 0.0833333, 0]], [0.7708, [3, -0.0833333, 0], [3, 0.1, 0]], [0.7696, [3, -0.1, 0], [3, 0.0666667, 0]], [0.7708, [3, -0.0666667, 0], [3, 0.0833333, 0]], [0.7696, [3, -0.0833333, 0], [3, 0.075, 0]], [0.7708, [3, -0.075, 0], [3, 0.0916667, 0]], [0.7692, [3, -0.0916667, 0], [3, 0.0916667, 0]], [0.7692, [3, -0.0916667, 0], [3, 0.225, 0]], [0.256965, [3, -0.225, 0], [3, 0, 0]]])

            names.append("RHipPitch")
            times.append([0.125, 3.05, 3.325, 4])
            keys.append([[0.138018, [3, -0.0416667, 0], [3, 0.975, 0]], [-0.251617, [3, -0.975, 0], [3, 0.0916667, 0]], [-0.251617, [3, -0.0916667, 0], [3, 0.225, 0]], [-0.45, [3, -0.225, 0], [3, 0, 0]]])

            names.append("RHipRoll")
            times.append([0.125, 3.05, 3.325, 4])
            keys.append([[-0.0383082, [3, -0.0416667, 0], [3, 0.975, 0]], [-0.0291041, [3, -0.975, 0], [3, 0.0916667, 0]], [-0.0291041, [3, -0.0916667, 0], [3, 0.225, 0]], [-0.00808309, [3, -0.225, 0], [3, 0, 0]]])

            names.append("RHipYawPitch")
            times.append([0.125, 3.05, 3.325, 4])
            keys.append([[-0.288349, [3, -0.0416667, 0], [3, 0.975, 0]], [-0.28068, [3, -0.975, 0], [3, 0.0916667, 0]], [-0.28068, [3, -0.0916667, 0], [3, 0.225, 0]], [-0.00744648, [3, -0.225, 0], [3, 0, 0]]])

            names.append("RKneePitch")
            times.append([0.125, 3.05, 3.325, 4])
            keys.append([[0.0798099, [3, -0.0416667, 0], [3, 0.975, 0]], [0.676537, [3, -0.975, 0], [3, 0.0916667, 0]], [0.676537, [3, -0.0916667, 0], [3, 0.225, 0]], [0.699999, [3, -0.225, 0], [3, 0, 0]]])

            names.append("RShoulderPitch")
            times.append([0.2, 0.525, 0.8, 1.05, 1.325, 1.55, 1.8, 2.1, 2.3, 2.55, 2.775, 3.05, 3.325, 4])
            keys.append([[-0.742414, [3, -0.0666667, 0], [3, 0.108333, 0]], [-0.566003, [3, -0.108333, 0], [3, 0.0916667, 0]], [-0.742414, [3, -0.0916667, 0], [3, 0.0833333, 0]], [-0.566003, [3, -0.0833333, 0], [3, 0.0916667, 0]], [-0.742414, [3, -0.0916667, 0], [3, 0.075, 0]], [-0.566003, [3, -0.075, 0], [3, 0.0833333, 0]], [-0.742414, [3, -0.0833333, 0], [3, 0.1, 0]], [-0.566003, [3, -0.1, 0], [3, 0.0666667, 0]], [-0.742414, [3, -0.0666667, 0], [3, 0.0833333, 0]], [-0.566003, [3, -0.0833333, 0], [3, 0.075, 0]], [-0.742414, [3, -0.075, 0], [3, 0.0916667, 0]], [-0.544529, [3, -0.0916667, 0], [3, 0.0916667, 0]], [-0.544529, [3, -0.0916667, 0], [3, 0.225, 0]], [1.40042, [3, -0.225, 0], [3, 0, 0]]])

            names.append("RShoulderRoll")
            times.append([0.2, 0.525, 0.8, 1.05, 1.325, 1.55, 1.8, 2.1, 2.3, 2.55, 2.775, 3.05, 3.325, 4])
            keys.append([[-0.43263, [3, -0.0666667, 0], [3, 0.108333, 0]], [-0.0614019, [3, -0.108333, 0], [3, 0.0916667, 0]], [-0.43263, [3, -0.0916667, 0], [3, 0.0833333, 0]], [-0.0614019, [3, -0.0833333, 0], [3, 0.0916667, 0]], [-0.43263, [3, -0.0916667, 0], [3, 0.075, 0]], [-0.0614019, [3, -0.075, 0], [3, 0.0833333, 0]], [-0.43263, [3, -0.0833333, 0], [3, 0.1, 0]], [-0.0614019, [3, -0.1, 0], [3, 0.0666667, 0]], [-0.43263, [3, -0.0666667, 0], [3, 0.0833333, 0]], [-0.0614019, [3, -0.0833333, 0], [3, 0.075, 0]], [-0.43263, [3, -0.075, 0], [3, 0.0916667, 0]], [-0.075208, [3, -0.0916667, 0], [3, 0.0916667, 0]], [-0.075208, [3, -0.0916667, 0], [3, 0.225, 0]], [-0.291301, [3, -0.225, 0], [3, 0, 0]]])

            names.append("RWristYaw")
            times.append([0.2, 0.525, 0.8, 1.05, 1.325, 1.55, 1.8, 2.1, 2.3, 2.55, 2.775, 3.05, 3.325, 4])
            keys.append([[1.30539, [3, -0.0666667, 0], [3, 0.108333, 0]], [0.803775, [3, -0.108333, 0], [3, 0.0916667, 0]], [1.30539, [3, -0.0916667, 0], [3, 0.0833333, 0]], [0.803775, [3, -0.0833333, 0], [3, 0.0916667, 0]], [1.30539, [3, -0.0916667, 0], [3, 0.075, 0]], [0.803775, [3, -0.075, 0], [3, 0.0833333, 0]], [1.30539, [3, -0.0833333, 0], [3, 0.1, 0]], [0.803775, [3, -0.1, 0], [3, 0.0666667, 0]], [1.30539, [3, -0.0666667, 0], [3, 0.0833333, 0]], [0.803775, [3, -0.0833333, 0], [3, 0.075, 0]], [1.30539, [3, -0.075, 0], [3, 0.0916667, 0]], [0.820649, [3, -0.0916667, 0], [3, 0.0916667, 0]], [0.820649, [3, -0.0916667, 0], [3, 0.225, 0]], [0.00244081, [3, -0.225, 0], [3, 0, 0]]])
        
            return names, self.slow_down(times, multiplier), keys
